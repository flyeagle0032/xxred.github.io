(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{173:function(e,t,a){"use strict";a.r(t);var r=a(0),o=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"go入门介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go入门介绍","aria-hidden":"true"}},[e._v("#")]),e._v(" go入门介绍")]),e._v(" "),a("ul",[a("li",[e._v("Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。")]),e._v(" "),a("li",[e._v("Go是从2007年末由Robert Griesemer, Rob Pike, Ken Thompson主持开发，后来还加入了Ian Lance Taylor, Russ Cox等人，并最终于2009年11月开源，在2012年早些时候发布了Go 1稳定版本。现在Go的开发已经是完全开放的，并且拥有一个活跃的社区。")]),e._v(" "),a("li",[e._v("计算机软件经历了这么多年的发展，形成了多种学术流派，有面向过程编程、面向对象编程、函数式编程、面向消息编程等，这些思想究竟孰优孰劣，众说纷纭。除了OOP外，近年出现了一些小众的编程哲学，Go语言对这些思想亦有所吸收。例如，Go语言接受了函数式编程的一些想法，支持匿名函数与闭包。再如，Go语言接受了以Erlang语言为代表的面向消息编程思想，支持goroutine和通道，并推荐使用消息而不是共享内存来进行并发编程。总体来说，Go语言是一个非常现代化的语言，精小但非常强大。")])]),e._v(" "),a("h2",{attrs:{id:"是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是什么","aria-hidden":"true"}},[e._v("#")]),e._v(" 是什么")]),e._v(" "),a("ul",[a("li",[e._v("Go语言是谷歌2009年发布的第二款开源编程语言,它专门针对多处理器系统应用程序的编程进行了优化，它是一种系统语言其非常有用和强大,其程序可以媲美C或C++代码的速度，而且更加安全、支持并行进程。")]),e._v(" "),a("li",[e._v("Go支持面向对象，而且具有真正的闭包(closures)和反射 (reflection)等功能。")]),e._v(" "),a("li",[e._v("Go可以在不损失应用程序性能的情况下降低代码的复杂性。")])]),e._v(" "),a("h2",{attrs:{id:"目标用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标用途","aria-hidden":"true"}},[e._v("#")]),e._v(" 目标用途")]),e._v(" "),a("ul",[a("li",[e._v("Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。")]),e._v(" "),a("li",[e._v("Go的目标是希望提升现有编程语言对程序库等依赖性(dependency)的管理，这些软件元素会被应用程序反复调用。由于存在并行编程模式，因此这一语言也被设计用来解决多处理器的任务。")]),e._v(" "),a("li",[e._v("对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。")])])])}],!1,null,null,null);t.default=o.exports}}]);