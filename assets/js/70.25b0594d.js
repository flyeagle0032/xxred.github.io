(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{189:function(t,e,r){"use strict";r.r(e);var i=r(0),n=Object(i.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/IdentityServer/IdentityServer4",target:"_blank",rel:"noopener noreferrer"}},[t._v("IdentityServer"),r("OutboundLink")],1),t._v("是一个免费的开源 OpenID Connect 和 OAuth 2.0 框架，适用于 ASP .NET Core。IdentityServer4 由 Dominick Baier 和 Brock Allen 创建和维护，整合了在应用程序中集成基于令牌的身份验证，单点登录和 API 访问控制所需的所有协议实现和可扩展性点。IdentityServer4 由 OpenID Foundation 正式认证，因此符合规范且可互操作")]),t._v(" "),r("li",[t._v("这是 ASP .NET Core 中用的较多的框架，可参考 demo 快速体验")])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"简单理解-oauth-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单理解-oauth-2-0","aria-hidden":"true"}},[this._v("#")]),this._v(" 简单理解 OAuth 2.0")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("虽然经常用 OAuth 2.0，但是原理却不曾了解，印象里觉得很简单，请求跳来跳去，今天看完相关介绍，就来捋一捋 OAuth 2.0，记录一下加深印象")]),t._v(" "),r("li",[t._v("OAuth 2.0 是行业标准的授权协议。OAuth 2.0 取代了 2006 年创建的原始 OAuth 协议所做的工作.OAuth 2.0 专注于客户端开发人员的简单性，同时为 Web 应用程序，桌面应用程序，移动电话和客厅设备提供特定的授权流程。该规范及其扩展正在 IETF OAuth 工作组内开发。")]),t._v(" "),r("li",[t._v("理解 OAuth 2.0 参考http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html")]),t._v(" "),r("li",[t._v("OAuth 社区网站https://oauth.net")]),t._v(" "),r("li",[t._v("OAuth Server 的实现-IdentityServer4 源码分析https://www.cnblogs.com/jackcao/p/10031828.html")]),t._v(" "),r("li",[t._v("OAuth 的机制原理讲解及开发流程https://kb.cnblogs.com/page/189153/")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"解决的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决的问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 解决的问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("在不将密码透露给第三方的基础上，授权给第三方访问服务器资源")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"认证流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证流程","aria-hidden":"true"}},[this._v("#")]),this._v(" 认证流程")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("得到授权码 code")]),this._v(" "),e("li",[this._v("获取 access token")]),this._v(" "),e("li",[this._v("通过 access token，获取 OpenID")]),this._v(" "),e("li",[this._v("通过 access token 及 OpenID 调用 API，获取用户授权信息")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http://blog.unvs.cn/upload/oauth2.0_developer_pic.jpg",alt:" "}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("第一步得到授权码 code，这个可以看做一个获取资源的请求，该请求需要登录（输入密码，或者 qq 登录等）。登陆过程就是用户自己在授权服务器登陆的，不用第三方拿密码自己登陆授权服务器。登录授权服务器之后，返回 code，完成第一步。到这里用户的登录动作就完成了")]),this._v(" "),e("li",[this._v("第二步第三方应用根据 code 请求 token，再到几步后面获取其它资源，刷新 token 等")]),this._v(" "),e("li",[this._v("中间根据授权类型，授权范围做相应处理，整个协议大概就可以这样子理解，实际的登录过程由用户在授权服务器登录，所以输入密码过程要认准域名，防止伪造的网站，泄露了密码")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"net-实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#net-实现","aria-hidden":"true"}},[this._v("#")]),this._v(" .net 实现")])}],!1,null,null,null);e.default=n.exports}}]);